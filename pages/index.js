import React, {useState, useEffect} from 'react'
import { Router, useRouter } from 'next/router'
import Head from 'next/head'
import Image from 'next/image'
// import styles from '../styles/Home.module.scss'
import SetList from '../components/setList'
import Navigation from '../components/Navigation'

export default function Home({ workoutData, routineData, today, thisRoutine, nextRoutine, apiUrl }) {
  const router = useRouter();
  let [superSets, setSuperSets] = useState([])

  const formatWorkoutData = (data) => {
    let updatedSuperSets = [];
    let rawData = data || workoutData;

    for (let movement of rawData) {
      const superSetId = movement.set_id - 1;
      if (updatedSuperSets[superSetId] == null) {
        console.log(`Found superSet ${movement.set_id}`)
        updatedSuperSets[superSetId] = {
          id: movement.set_id,
          movements: []
        };
      }
      updatedSuperSets[superSetId].movements.push(movement);
    }

    setSuperSets(updatedSuperSets);
  }

  const refreshWorkoutData = () => {
    const url = `${apiUrl}/routine/${thisRoutine.routine_id}`;
    fetch(url, {accept: "application/json"})
      .then(data => data.json())
      .then(data => {
        superSets = formatWorkoutData(data.movements);
      })
  }
  
  useEffect(() => {
    formatWorkoutData()
  }, [workoutData]);

  return (
    <div>
      <Head>
        <title>Workout Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Navigation thisRoutine={thisRoutine}
          nextRoutine={nextRoutine}
          routines={routineData}
          apiUrl={apiUrl}
          today={today} />
        <SetList superSets={superSets} 
                 today={today}
                 routineId={ thisRoutine['routine_id'] }
                 apiUrl={apiUrl}
                 refreshWorkoutData = {refreshWorkoutData} />
      </main>
    </div>
  )
}

// export async function getServerSideProps() {
//   const routineId = params.routineId;
//   apiUrl = process.env.apiUrl || `http://localhost:3333`;
// }

export async function getStaticProps() {
  const apiUrl = process.env.API_URL || `http://localhost:3333`;
  let routineData,
      workoutData,
      thisRoutine,
      nextRoutine,
      today;

  await fetch (`${apiUrl}/routine/current`, { accept: "application/json" })
  .then (data => data.json())
  .then (data => {
    routineData = data.routines;
    workoutData = data.movements;
    thisRoutine = data.thisRoutine;
    nextRoutine = data.nextRoutine;
    today = data.todaysDate;
  })

  return { props: { workoutData, routineData, thisRoutine, nextRoutine, today, apiUrl } }
}
